//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5477
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5477 版自动生成。
// 
#pragma warning disable 1591

namespace WebTest.MobileService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileServiceSoap", Namespace="WebTransferService")]
    public partial class MobileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSuperscalarCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CapacityAnalysisOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBhzPanDetailChuLiYiJianOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzPanDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuperscalarSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzLineStaticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzIngOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzJLCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzSGCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzStationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzMachineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzMachineListWithFullNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzUserLoginLogListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzUserLoginLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBhzUserLastLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBhzLoginLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysUserLineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginSysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBhzUserLineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginBhzOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileService() {
            this.Url = global::WebTest.Properties.Settings.Default.WebTest_MobileService_MobileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSuperscalarCountCompletedEventHandler GetSuperscalarCountCompleted;
        
        /// <remarks/>
        public event CapacityAnalysisCompletedEventHandler CapacityAnalysisCompleted;
        
        /// <remarks/>
        public event UpdateBhzPanDetailChuLiYiJianCompletedEventHandler UpdateBhzPanDetailChuLiYiJianCompleted;
        
        /// <remarks/>
        public event GetBhzPanDetailCompletedEventHandler GetBhzPanDetailCompleted;
        
        /// <remarks/>
        public event SuperscalarSearchCompletedEventHandler SuperscalarSearchCompleted;
        
        /// <remarks/>
        public event GetBhzLineStaticsCompletedEventHandler GetBhzLineStaticsCompleted;
        
        /// <remarks/>
        public event GetBhzIngCompletedEventHandler GetBhzIngCompleted;
        
        /// <remarks/>
        public event GetBhzJLCompanyListCompletedEventHandler GetBhzJLCompanyListCompleted;
        
        /// <remarks/>
        public event GetBhzSGCompanyListCompletedEventHandler GetBhzSGCompanyListCompleted;
        
        /// <remarks/>
        public event GetBhzStationListCompletedEventHandler GetBhzStationListCompleted;
        
        /// <remarks/>
        public event GetBhzMachineListCompletedEventHandler GetBhzMachineListCompleted;
        
        /// <remarks/>
        public event GetBhzMachineListWithFullNameCompletedEventHandler GetBhzMachineListWithFullNameCompleted;
        
        /// <remarks/>
        public event GetBhzUserLoginLogListCompletedEventHandler GetBhzUserLoginLogListCompleted;
        
        /// <remarks/>
        public event GetBhzUserLoginLogCompletedEventHandler GetBhzUserLoginLogCompleted;
        
        /// <remarks/>
        public event GetBhzUserInfoCompletedEventHandler GetBhzUserInfoCompleted;
        
        /// <remarks/>
        public event UpdateBhzUserLastLineCompletedEventHandler UpdateBhzUserLastLineCompleted;
        
        /// <remarks/>
        public event AddBhzLoginLogCompletedEventHandler AddBhzLoginLogCompleted;
        
        /// <remarks/>
        public event GetSysUserLineListCompletedEventHandler GetSysUserLineListCompleted;
        
        /// <remarks/>
        public event LoginSysCompletedEventHandler LoginSysCompleted;
        
        /// <remarks/>
        public event GetBhzUserLineListCompletedEventHandler GetBhzUserLineListCompleted;
        
        /// <remarks/>
        public event LoginBhzCompletedEventHandler LoginBhzCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetSuperscalarCount", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSuperscalarCount(string LineID, string LastDate, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetSuperscalarCount", new object[] {
                        LineID,
                        LastDate,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSuperscalarCountAsync(string LineID, string LastDate, string AuthName, string AuthPwd) {
            this.GetSuperscalarCountAsync(LineID, LastDate, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetSuperscalarCountAsync(string LineID, string LastDate, string AuthName, string AuthPwd, object userState) {
            if ((this.GetSuperscalarCountOperationCompleted == null)) {
                this.GetSuperscalarCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSuperscalarCountOperationCompleted);
            }
            this.InvokeAsync("GetSuperscalarCount", new object[] {
                        LineID,
                        LastDate,
                        AuthName,
                        AuthPwd}, this.GetSuperscalarCountOperationCompleted, userState);
        }
        
        private void OnGetSuperscalarCountOperationCompleted(object arg) {
            if ((this.GetSuperscalarCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSuperscalarCountCompleted(this, new GetSuperscalarCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/CapacityAnalysis", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CapacityAnalysis(string LineID, string MachineCodes, string StartDate, int FType, string EndDate, int PageSize, int PageIndex, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("CapacityAnalysis", new object[] {
                        LineID,
                        MachineCodes,
                        StartDate,
                        FType,
                        EndDate,
                        PageSize,
                        PageIndex,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CapacityAnalysisAsync(string LineID, string MachineCodes, string StartDate, int FType, string EndDate, int PageSize, int PageIndex, string AuthName, string AuthPwd) {
            this.CapacityAnalysisAsync(LineID, MachineCodes, StartDate, FType, EndDate, PageSize, PageIndex, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void CapacityAnalysisAsync(string LineID, string MachineCodes, string StartDate, int FType, string EndDate, int PageSize, int PageIndex, string AuthName, string AuthPwd, object userState) {
            if ((this.CapacityAnalysisOperationCompleted == null)) {
                this.CapacityAnalysisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCapacityAnalysisOperationCompleted);
            }
            this.InvokeAsync("CapacityAnalysis", new object[] {
                        LineID,
                        MachineCodes,
                        StartDate,
                        FType,
                        EndDate,
                        PageSize,
                        PageIndex,
                        AuthName,
                        AuthPwd}, this.CapacityAnalysisOperationCompleted, userState);
        }
        
        private void OnCapacityAnalysisOperationCompleted(object arg) {
            if ((this.CapacityAnalysisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CapacityAnalysisCompleted(this, new CapacityAnalysisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/UpdateBhzPanDetailChuLiYiJian", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBhzPanDetailChuLiYiJian(string LineID, string PanID, string ChuLiYiJian, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("UpdateBhzPanDetailChuLiYiJian", new object[] {
                        LineID,
                        PanID,
                        ChuLiYiJian,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBhzPanDetailChuLiYiJianAsync(string LineID, string PanID, string ChuLiYiJian, string AuthName, string AuthPwd) {
            this.UpdateBhzPanDetailChuLiYiJianAsync(LineID, PanID, ChuLiYiJian, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void UpdateBhzPanDetailChuLiYiJianAsync(string LineID, string PanID, string ChuLiYiJian, string AuthName, string AuthPwd, object userState) {
            if ((this.UpdateBhzPanDetailChuLiYiJianOperationCompleted == null)) {
                this.UpdateBhzPanDetailChuLiYiJianOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBhzPanDetailChuLiYiJianOperationCompleted);
            }
            this.InvokeAsync("UpdateBhzPanDetailChuLiYiJian", new object[] {
                        LineID,
                        PanID,
                        ChuLiYiJian,
                        AuthName,
                        AuthPwd}, this.UpdateBhzPanDetailChuLiYiJianOperationCompleted, userState);
        }
        
        private void OnUpdateBhzPanDetailChuLiYiJianOperationCompleted(object arg) {
            if ((this.UpdateBhzPanDetailChuLiYiJianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBhzPanDetailChuLiYiJianCompleted(this, new UpdateBhzPanDetailChuLiYiJianCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzPanDetail", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzPanDetail(string LineID, string PanID, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzPanDetail", new object[] {
                        LineID,
                        PanID,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzPanDetailAsync(string LineID, string PanID, string AuthName, string AuthPwd) {
            this.GetBhzPanDetailAsync(LineID, PanID, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzPanDetailAsync(string LineID, string PanID, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzPanDetailOperationCompleted == null)) {
                this.GetBhzPanDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzPanDetailOperationCompleted);
            }
            this.InvokeAsync("GetBhzPanDetail", new object[] {
                        LineID,
                        PanID,
                        AuthName,
                        AuthPwd}, this.GetBhzPanDetailOperationCompleted, userState);
        }
        
        private void OnGetBhzPanDetailOperationCompleted(object arg) {
            if ((this.GetBhzPanDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzPanDetailCompleted(this, new GetBhzPanDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/SuperscalarSearch", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SuperscalarSearch(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string ProjectName, string JiaoZhuBuWei, string ChaoBiaoDengJi, string MachineCode, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("SuperscalarSearch", new object[] {
                        LineID,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        ProjectName,
                        JiaoZhuBuWei,
                        ChaoBiaoDengJi,
                        MachineCode,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuperscalarSearchAsync(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string ProjectName, string JiaoZhuBuWei, string ChaoBiaoDengJi, string MachineCode, string AuthName, string AuthPwd) {
            this.SuperscalarSearchAsync(LineID, PageSize, LastRowNum, StartDate, EndDate, ProjectName, JiaoZhuBuWei, ChaoBiaoDengJi, MachineCode, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void SuperscalarSearchAsync(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string ProjectName, string JiaoZhuBuWei, string ChaoBiaoDengJi, string MachineCode, string AuthName, string AuthPwd, object userState) {
            if ((this.SuperscalarSearchOperationCompleted == null)) {
                this.SuperscalarSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuperscalarSearchOperationCompleted);
            }
            this.InvokeAsync("SuperscalarSearch", new object[] {
                        LineID,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        ProjectName,
                        JiaoZhuBuWei,
                        ChaoBiaoDengJi,
                        MachineCode,
                        AuthName,
                        AuthPwd}, this.SuperscalarSearchOperationCompleted, userState);
        }
        
        private void OnSuperscalarSearchOperationCompleted(object arg) {
            if ((this.SuperscalarSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuperscalarSearchCompleted(this, new SuperscalarSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzLineStatics", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzLineStatics(string LineID, string StartDate, string EndDate, string MachineCode, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzLineStatics", new object[] {
                        LineID,
                        StartDate,
                        EndDate,
                        MachineCode,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzLineStaticsAsync(string LineID, string StartDate, string EndDate, string MachineCode, string AuthName, string AuthPwd) {
            this.GetBhzLineStaticsAsync(LineID, StartDate, EndDate, MachineCode, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzLineStaticsAsync(string LineID, string StartDate, string EndDate, string MachineCode, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzLineStaticsOperationCompleted == null)) {
                this.GetBhzLineStaticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzLineStaticsOperationCompleted);
            }
            this.InvokeAsync("GetBhzLineStatics", new object[] {
                        LineID,
                        StartDate,
                        EndDate,
                        MachineCode,
                        AuthName,
                        AuthPwd}, this.GetBhzLineStaticsOperationCompleted, userState);
        }
        
        private void OnGetBhzLineStaticsOperationCompleted(object arg) {
            if ((this.GetBhzLineStaticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzLineStaticsCompleted(this, new GetBhzLineStaticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzIng", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzIng(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzIng", new object[] {
                        LineID,
                        UserName,
                        TestCode,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzIngAsync(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd) {
            this.GetBhzIngAsync(LineID, UserName, TestCode, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzIngAsync(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzIngOperationCompleted == null)) {
                this.GetBhzIngOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzIngOperationCompleted);
            }
            this.InvokeAsync("GetBhzIng", new object[] {
                        LineID,
                        UserName,
                        TestCode,
                        AuthName,
                        AuthPwd}, this.GetBhzIngOperationCompleted, userState);
        }
        
        private void OnGetBhzIngOperationCompleted(object arg) {
            if ((this.GetBhzIngCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzIngCompleted(this, new GetBhzIngCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzJLCompanyList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzJLCompanyList(string LineID, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzJLCompanyList", new object[] {
                        LineID,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzJLCompanyListAsync(string LineID, string AuthName, string AuthPwd) {
            this.GetBhzJLCompanyListAsync(LineID, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzJLCompanyListAsync(string LineID, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzJLCompanyListOperationCompleted == null)) {
                this.GetBhzJLCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzJLCompanyListOperationCompleted);
            }
            this.InvokeAsync("GetBhzJLCompanyList", new object[] {
                        LineID,
                        AuthName,
                        AuthPwd}, this.GetBhzJLCompanyListOperationCompleted, userState);
        }
        
        private void OnGetBhzJLCompanyListOperationCompleted(object arg) {
            if ((this.GetBhzJLCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzJLCompanyListCompleted(this, new GetBhzJLCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzSGCompanyList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzSGCompanyList(string LineID, string JLID, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzSGCompanyList", new object[] {
                        LineID,
                        JLID,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzSGCompanyListAsync(string LineID, string JLID, string AuthName, string AuthPwd) {
            this.GetBhzSGCompanyListAsync(LineID, JLID, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzSGCompanyListAsync(string LineID, string JLID, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzSGCompanyListOperationCompleted == null)) {
                this.GetBhzSGCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzSGCompanyListOperationCompleted);
            }
            this.InvokeAsync("GetBhzSGCompanyList", new object[] {
                        LineID,
                        JLID,
                        AuthName,
                        AuthPwd}, this.GetBhzSGCompanyListOperationCompleted, userState);
        }
        
        private void OnGetBhzSGCompanyListOperationCompleted(object arg) {
            if ((this.GetBhzSGCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzSGCompanyListCompleted(this, new GetBhzSGCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzStationList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzStationList(string LineID, string CompanyID, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzStationList", new object[] {
                        LineID,
                        CompanyID,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzStationListAsync(string LineID, string CompanyID, string AuthName, string AuthPwd) {
            this.GetBhzStationListAsync(LineID, CompanyID, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzStationListAsync(string LineID, string CompanyID, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzStationListOperationCompleted == null)) {
                this.GetBhzStationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzStationListOperationCompleted);
            }
            this.InvokeAsync("GetBhzStationList", new object[] {
                        LineID,
                        CompanyID,
                        AuthName,
                        AuthPwd}, this.GetBhzStationListOperationCompleted, userState);
        }
        
        private void OnGetBhzStationListOperationCompleted(object arg) {
            if ((this.GetBhzStationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzStationListCompleted(this, new GetBhzStationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzMachineList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzMachineList(string LineID, string StationID, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzMachineList", new object[] {
                        LineID,
                        StationID,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzMachineListAsync(string LineID, string StationID, string AuthName, string AuthPwd) {
            this.GetBhzMachineListAsync(LineID, StationID, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzMachineListAsync(string LineID, string StationID, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzMachineListOperationCompleted == null)) {
                this.GetBhzMachineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzMachineListOperationCompleted);
            }
            this.InvokeAsync("GetBhzMachineList", new object[] {
                        LineID,
                        StationID,
                        AuthName,
                        AuthPwd}, this.GetBhzMachineListOperationCompleted, userState);
        }
        
        private void OnGetBhzMachineListOperationCompleted(object arg) {
            if ((this.GetBhzMachineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzMachineListCompleted(this, new GetBhzMachineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzMachineListWithFullName", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzMachineListWithFullName(string LineID, string JLID, string TestCode, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzMachineListWithFullName", new object[] {
                        LineID,
                        JLID,
                        TestCode,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzMachineListWithFullNameAsync(string LineID, string JLID, string TestCode, string AuthName, string AuthPwd) {
            this.GetBhzMachineListWithFullNameAsync(LineID, JLID, TestCode, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzMachineListWithFullNameAsync(string LineID, string JLID, string TestCode, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzMachineListWithFullNameOperationCompleted == null)) {
                this.GetBhzMachineListWithFullNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzMachineListWithFullNameOperationCompleted);
            }
            this.InvokeAsync("GetBhzMachineListWithFullName", new object[] {
                        LineID,
                        JLID,
                        TestCode,
                        AuthName,
                        AuthPwd}, this.GetBhzMachineListWithFullNameOperationCompleted, userState);
        }
        
        private void OnGetBhzMachineListWithFullNameOperationCompleted(object arg) {
            if ((this.GetBhzMachineListWithFullNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzMachineListWithFullNameCompleted(this, new GetBhzMachineListWithFullNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzUserLoginLogList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzUserLoginLogList(string LineID, string UserName, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzUserLoginLogList", new object[] {
                        LineID,
                        UserName,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzUserLoginLogListAsync(string LineID, string UserName, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd) {
            this.GetBhzUserLoginLogListAsync(LineID, UserName, PageSize, LastRowNum, StartDate, EndDate, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzUserLoginLogListAsync(string LineID, string UserName, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzUserLoginLogListOperationCompleted == null)) {
                this.GetBhzUserLoginLogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzUserLoginLogListOperationCompleted);
            }
            this.InvokeAsync("GetBhzUserLoginLogList", new object[] {
                        LineID,
                        UserName,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        AuthName,
                        AuthPwd}, this.GetBhzUserLoginLogListOperationCompleted, userState);
        }
        
        private void OnGetBhzUserLoginLogListOperationCompleted(object arg) {
            if ((this.GetBhzUserLoginLogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzUserLoginLogListCompleted(this, new GetBhzUserLoginLogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzUserLoginLog", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzUserLoginLog(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzUserLoginLog", new object[] {
                        LineID,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzUserLoginLogAsync(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd) {
            this.GetBhzUserLoginLogAsync(LineID, PageSize, LastRowNum, StartDate, EndDate, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzUserLoginLogAsync(string LineID, int PageSize, int LastRowNum, string StartDate, string EndDate, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzUserLoginLogOperationCompleted == null)) {
                this.GetBhzUserLoginLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzUserLoginLogOperationCompleted);
            }
            this.InvokeAsync("GetBhzUserLoginLog", new object[] {
                        LineID,
                        PageSize,
                        LastRowNum,
                        StartDate,
                        EndDate,
                        AuthName,
                        AuthPwd}, this.GetBhzUserLoginLogOperationCompleted, userState);
        }
        
        private void OnGetBhzUserLoginLogOperationCompleted(object arg) {
            if ((this.GetBhzUserLoginLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzUserLoginLogCompleted(this, new GetBhzUserLoginLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzUserInfo", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzUserInfo(string LineID, string UserName, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzUserInfo", new object[] {
                        LineID,
                        UserName,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzUserInfoAsync(string LineID, string UserName, string AuthName, string AuthPwd) {
            this.GetBhzUserInfoAsync(LineID, UserName, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzUserInfoAsync(string LineID, string UserName, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzUserInfoOperationCompleted == null)) {
                this.GetBhzUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetBhzUserInfo", new object[] {
                        LineID,
                        UserName,
                        AuthName,
                        AuthPwd}, this.GetBhzUserInfoOperationCompleted, userState);
        }
        
        private void OnGetBhzUserInfoOperationCompleted(object arg) {
            if ((this.GetBhzUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzUserInfoCompleted(this, new GetBhzUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/UpdateBhzUserLastLine", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBhzUserLastLine(string UserName, string TestCode, string LineID, string Description, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("UpdateBhzUserLastLine", new object[] {
                        UserName,
                        TestCode,
                        LineID,
                        Description,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBhzUserLastLineAsync(string UserName, string TestCode, string LineID, string Description, string AuthName, string AuthPwd) {
            this.UpdateBhzUserLastLineAsync(UserName, TestCode, LineID, Description, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void UpdateBhzUserLastLineAsync(string UserName, string TestCode, string LineID, string Description, string AuthName, string AuthPwd, object userState) {
            if ((this.UpdateBhzUserLastLineOperationCompleted == null)) {
                this.UpdateBhzUserLastLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBhzUserLastLineOperationCompleted);
            }
            this.InvokeAsync("UpdateBhzUserLastLine", new object[] {
                        UserName,
                        TestCode,
                        LineID,
                        Description,
                        AuthName,
                        AuthPwd}, this.UpdateBhzUserLastLineOperationCompleted, userState);
        }
        
        private void OnUpdateBhzUserLastLineOperationCompleted(object arg) {
            if ((this.UpdateBhzUserLastLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBhzUserLastLineCompleted(this, new UpdateBhzUserLastLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/AddBhzLoginLog", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddBhzLoginLog(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("AddBhzLoginLog", new object[] {
                        LineID,
                        UserName,
                        TestCode,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBhzLoginLogAsync(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd) {
            this.AddBhzLoginLogAsync(LineID, UserName, TestCode, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void AddBhzLoginLogAsync(string LineID, string UserName, string TestCode, string AuthName, string AuthPwd, object userState) {
            if ((this.AddBhzLoginLogOperationCompleted == null)) {
                this.AddBhzLoginLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBhzLoginLogOperationCompleted);
            }
            this.InvokeAsync("AddBhzLoginLog", new object[] {
                        LineID,
                        UserName,
                        TestCode,
                        AuthName,
                        AuthPwd}, this.AddBhzLoginLogOperationCompleted, userState);
        }
        
        private void OnAddBhzLoginLogOperationCompleted(object arg) {
            if ((this.AddBhzLoginLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBhzLoginLogCompleted(this, new AddBhzLoginLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetSysUserLineList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSysUserLineList(string UserName, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetSysUserLineList", new object[] {
                        UserName,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysUserLineListAsync(string UserName, string AuthName, string AuthPwd) {
            this.GetSysUserLineListAsync(UserName, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetSysUserLineListAsync(string UserName, string AuthName, string AuthPwd, object userState) {
            if ((this.GetSysUserLineListOperationCompleted == null)) {
                this.GetSysUserLineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysUserLineListOperationCompleted);
            }
            this.InvokeAsync("GetSysUserLineList", new object[] {
                        UserName,
                        AuthName,
                        AuthPwd}, this.GetSysUserLineListOperationCompleted, userState);
        }
        
        private void OnGetSysUserLineListOperationCompleted(object arg) {
            if ((this.GetSysUserLineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysUserLineListCompleted(this, new GetSysUserLineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/LoginSys", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginSys(string UserName, string Password, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("LoginSys", new object[] {
                        UserName,
                        Password,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginSysAsync(string UserName, string Password, string AuthName, string AuthPwd) {
            this.LoginSysAsync(UserName, Password, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void LoginSysAsync(string UserName, string Password, string AuthName, string AuthPwd, object userState) {
            if ((this.LoginSysOperationCompleted == null)) {
                this.LoginSysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginSysOperationCompleted);
            }
            this.InvokeAsync("LoginSys", new object[] {
                        UserName,
                        Password,
                        AuthName,
                        AuthPwd}, this.LoginSysOperationCompleted, userState);
        }
        
        private void OnLoginSysOperationCompleted(object arg) {
            if ((this.LoginSysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginSysCompleted(this, new LoginSysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/GetBhzUserLineList", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBhzUserLineList(string UserName, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("GetBhzUserLineList", new object[] {
                        UserName,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBhzUserLineListAsync(string UserName, string AuthName, string AuthPwd) {
            this.GetBhzUserLineListAsync(UserName, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void GetBhzUserLineListAsync(string UserName, string AuthName, string AuthPwd, object userState) {
            if ((this.GetBhzUserLineListOperationCompleted == null)) {
                this.GetBhzUserLineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBhzUserLineListOperationCompleted);
            }
            this.InvokeAsync("GetBhzUserLineList", new object[] {
                        UserName,
                        AuthName,
                        AuthPwd}, this.GetBhzUserLineListOperationCompleted, userState);
        }
        
        private void OnGetBhzUserLineListOperationCompleted(object arg) {
            if ((this.GetBhzUserLineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBhzUserLineListCompleted(this, new GetBhzUserLineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("WebTransferService/LoginBhz", RequestNamespace="WebTransferService", ResponseNamespace="WebTransferService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginBhz(string UserName, string Password, string AuthName, string AuthPwd) {
            object[] results = this.Invoke("LoginBhz", new object[] {
                        UserName,
                        Password,
                        AuthName,
                        AuthPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginBhzAsync(string UserName, string Password, string AuthName, string AuthPwd) {
            this.LoginBhzAsync(UserName, Password, AuthName, AuthPwd, null);
        }
        
        /// <remarks/>
        public void LoginBhzAsync(string UserName, string Password, string AuthName, string AuthPwd, object userState) {
            if ((this.LoginBhzOperationCompleted == null)) {
                this.LoginBhzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginBhzOperationCompleted);
            }
            this.InvokeAsync("LoginBhz", new object[] {
                        UserName,
                        Password,
                        AuthName,
                        AuthPwd}, this.LoginBhzOperationCompleted, userState);
        }
        
        private void OnLoginBhzOperationCompleted(object arg) {
            if ((this.LoginBhzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginBhzCompleted(this, new LoginBhzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetSuperscalarCountCompletedEventHandler(object sender, GetSuperscalarCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSuperscalarCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSuperscalarCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CapacityAnalysisCompletedEventHandler(object sender, CapacityAnalysisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CapacityAnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CapacityAnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateBhzPanDetailChuLiYiJianCompletedEventHandler(object sender, UpdateBhzPanDetailChuLiYiJianCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBhzPanDetailChuLiYiJianCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBhzPanDetailChuLiYiJianCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzPanDetailCompletedEventHandler(object sender, GetBhzPanDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzPanDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzPanDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SuperscalarSearchCompletedEventHandler(object sender, SuperscalarSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuperscalarSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuperscalarSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzLineStaticsCompletedEventHandler(object sender, GetBhzLineStaticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzLineStaticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzLineStaticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzIngCompletedEventHandler(object sender, GetBhzIngCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzIngCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzIngCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzJLCompanyListCompletedEventHandler(object sender, GetBhzJLCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzJLCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzJLCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzSGCompanyListCompletedEventHandler(object sender, GetBhzSGCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzSGCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzSGCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzStationListCompletedEventHandler(object sender, GetBhzStationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzStationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzStationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzMachineListCompletedEventHandler(object sender, GetBhzMachineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzMachineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzMachineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzMachineListWithFullNameCompletedEventHandler(object sender, GetBhzMachineListWithFullNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzMachineListWithFullNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzMachineListWithFullNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzUserLoginLogListCompletedEventHandler(object sender, GetBhzUserLoginLogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzUserLoginLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzUserLoginLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzUserLoginLogCompletedEventHandler(object sender, GetBhzUserLoginLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzUserLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzUserLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzUserInfoCompletedEventHandler(object sender, GetBhzUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateBhzUserLastLineCompletedEventHandler(object sender, UpdateBhzUserLastLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBhzUserLastLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBhzUserLastLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AddBhzLoginLogCompletedEventHandler(object sender, AddBhzLoginLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBhzLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBhzLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetSysUserLineListCompletedEventHandler(object sender, GetSysUserLineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysUserLineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysUserLineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoginSysCompletedEventHandler(object sender, LoginSysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginSysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginSysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetBhzUserLineListCompletedEventHandler(object sender, GetBhzUserLineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBhzUserLineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBhzUserLineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoginBhzCompletedEventHandler(object sender, LoginBhzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginBhzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginBhzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591